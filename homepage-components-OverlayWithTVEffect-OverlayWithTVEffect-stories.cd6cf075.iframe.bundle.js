"use strict";(self.webpackChunkapp=self.webpackChunkapp||[]).push([[16],{"./src/app/homepage/components/OverlayWithTVEffect/OverlayWithTVEffect.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,PoweringOn:()=>PoweringOn,__namedExportsOrder:()=>__namedExportsOrder,default:()=>OverlayWithTVEffect_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js");__webpack_require__("./node_modules/next/dist/compiled/react/index.js");const OverlayWithTVEffect=({isPoweringOn,onClose,buttonText="Allumer !"})=>(0,jsx_runtime.jsxs)("div",{className:"fixed inset-0 bg-black z-[100] flex flex-col items-center justify-center "+(isPoweringOn?"animate-tv-power-on":""),children:[(0,jsx_runtime.jsx)("div",{className:"absolute inset-0 bg-stripes opacity-25 pointer-events-none"}),!isPoweringOn&&(0,jsx_runtime.jsx)("button",{onClick:onClose,className:"text-5xl mb-10 md:text-6xl font-extrabold text-neon-green tracking-widest animate-crt-flicker-button",children:buttonText})]}),OverlayWithTVEffect_OverlayWithTVEffect=OverlayWithTVEffect;OverlayWithTVEffect.__docgenInfo={description:"",methods:[],displayName:"OverlayWithTVEffect",props:{isPoweringOn:{required:!0,tsType:{name:"boolean"},description:""},onClose:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},buttonText:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"'Allumer !'",computed:!1}}}};const OverlayWithTVEffect_stories={title:"Components/OverlayWithTVEffect",component:OverlayWithTVEffect_OverlayWithTVEffect,args:{isPoweringOn:!1,buttonText:"Allumer !"}},Default={args:{isPoweringOn:!1,onClose:()=>alert("Overlay fermé !")}},PoweringOn={args:{isPoweringOn:!0,onClose:()=>alert("Overlay en cours de démarrage !")}},__namedExportsOrder=["Default","PoweringOn"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    isPoweringOn: false,\n    onClose: () => alert('Overlay fermé !')\n  }\n}",...Default.parameters?.docs?.source}}},PoweringOn.parameters={...PoweringOn.parameters,docs:{...PoweringOn.parameters?.docs,source:{originalSource:"{\n  args: {\n    isPoweringOn: true,\n    onClose: () => alert('Overlay en cours de démarrage !')\n  }\n}",...PoweringOn.parameters?.docs?.source}}}}}]);